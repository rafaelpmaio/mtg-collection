// import { render, screen } from "@testing-library/react";
// import { useGetFilteredCollectionsList } from "state/hooks/useGetFilteredCollectionsList";
// import Home from "./Home";
// import userEvent from "@testing-library/user-event";
// import { RecoilRoot } from "recoil";
// import { useGetFilteredSetsList } from "state/hooks/stateHooks/filteredSetsListState/useGetFilteredSetsList";
// import { BrowserRouter } from "react-router-dom";

// const collections = [
//   {
//     id: "1",
//     name: "Alliances",
//     collect: false,
//     isCompleted: false,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "2",
//     name: "Homelands",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Baron Sengir",
//       },
//       {
//         id: "2",
//         name: "Soraya the Falconer",
//       },
//       {
//         id: "3",
//         name: "Chandler",
//       },
//     ],
//   },
//   {
//     id: "3",
//     name: "Ice Age",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Necropotence",
//       },
//       {
//         id: "2",
//         name: "Marton Stromgald",
//       },
//       {
//         id: "3",
//         name: "Altar of Bone",
//       },
//     ],
//   },
//   {
//     id: "4",
//     name: "Apocalipse",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "5",
//     name: "Mirrodin",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "6",
//     name: "Alpha",
//     collect: false,
//     isCompleted: false,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
// ];

// const mockHandleChange = jest.fn();
// jest.mock("state/hooks/useGetFilteredCollectionsList", () => {
//   return {
//     useGetFilteredCollectionsList: jest.fn(),
//   };
// });
// jest.mock("state/hooks/useHandleSelectorFilter", () => {
//   return {
//     useHandleSelectorFilter: () => mockHandleChange,
//   };
// });

// describe("When an option is selected from Dropdown menu", () => {
//   beforeEach(() => {
//     (useGetFilteredCollectionsList as jest.Mock).mockReturnValue(collections);
//   });

//   test("the correct list is shown on screen when option selected", async () => {
//     const user = userEvent.setup();
//     render(<Home />, { wrapper: RecoilRoot });

//     const dropdownMenu = screen.getByRole("combobox");

//     await user.selectOptions(
//       dropdownMenu,
//       screen.getByRole("option", { name: "Completed Sets" })
//     );

//     const newList = collections.filter((collection) => collection.isCompleted);

//     await waitFor(() => {
//       (useGetFilteredCollectionsList as jest.Mock).mockReturnValue(newList);
//     });

//     const listItens = await screen.findAllByRole("listitem");

//     expect(listItens).toHaveLength(newList.length);
//   });
// });



// const setsList = [
//   {
//     id: "1",
//     name: "Alliances",
//     collect: true,
//     isCompleted: false,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "2",
//     name: "Homelands",
//     collect: true,
//     isCompleted: false,
//     cards: [
//       {
//         id: "1",
//         name: "Baron Sengir",
//       },
//       {
//         id: "2",
//         name: "Soraya the Falconer",
//       },
//       {
//         id: "3",
//         name: "Chandler",
//       },
//     ],
//   },
//   {
//     id: "3",
//     name: "Ice Age",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Necropotence",
//       },
//       {
//         id: "2",
//         name: "Marton Stromgald",
//       },
//       {
//         id: "3",
//         name: "Altar of Bone",
//       },
//     ],
//   },
//   {
//     id: "4",
//     name: "Apocalipse",
//     collect: false,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "5",
//     name: "Mirrodin",
//     collect: true,
//     isCompleted: true,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
//   {
//     id: "6",
//     name: "Alpha",
//     collect: false,
//     isCompleted: false,
//     cards: [
//       {
//         id: "1",
//         name: "Force of Will",
//       },
//       {
//         id: "2",
//         name: "Helm of Obedience",
//       },
//       {
//         id: "3",
//         name: "Lake of the Dead",
//       },
//     ],
//   },
// ];

// jest.mock("state/hooks/useGetFilteredCollectionsList", () => {
//   return {
//     useGetFilteredCollectionsList: jest.fn(),
//   };
// });

// describe("given a collections list", () => {
//   beforeEach(() => {
//     (useGetFilteredSetsList as jest.Mock).mockReturnValue(
//       setsList
//     );
//   });

//   test("the list is displayed on the screen", () => {
//     render(
//       <RecoilRoot>
//         <SetsList />
//       </RecoilRoot>,
//       { wrapper: BrowserRouter }
//     );
//     const list = screen.getByRole("list");

//     expect(list).toBeInTheDocument();
//   });

//   test("the number of collections displayed matches the selected list", () => {
//     render(
//       <RecoilRoot>
//         <SetsList />
//       </RecoilRoot>,
//       { wrapper: BrowserRouter }
//     );

//     const listItens = screen.getAllByRole("listitem");

//     expect(listItens).toHaveLength(setsList.length);
//   });
// });

// describe("given an album of collections selected on select list", () => {
//   beforeEach(() => {
//     (useGetFilteredSetsList as jest.Mock).mockReturnValue(
//       setsList
//     );
//   });
//   test("the correct album is shown on screen", () => {
//     render(
//       <RecoilRoot>
//         <SetsList />
//       </RecoilRoot>,
//       { wrapper: BrowserRouter }
//     );

//     const listItens = screen.getAllByRole("listitem");

//     expect(listItens).toHaveLength(setsList.length);
//   });
// });

// describe("given an empty collections list", () => {
//   beforeEach(() => {
//     (useGetCollectionsList as jest.Mock).mockReturnValue([]);
//   });

//   test("the list is not rendered", () => {
//     render(
//       <RecoilRoot>
//         <CollectionsList />
//       </RecoilRoot>
//     );

//     const list = screen.getByRole("list");

//     expect(list).not.toBeInTheDocument();
//   });
// });